#!/usr/bin/env ruby
#
# Convert hexadecimal number to unsigned binary.
#

def error(msg, code)
  STDERR.puts msg
  exit code
end

Bin2Hex = {
  '0' => '0000' , '1' => '0001' , '2' => '0010' , '3' => '0011' ,
  '4' => '0100' , '5' => '0101' , '6' => '0110' , '7' => '0111' ,
  '8' => '1000' , '9' => '1001' , 'A' => '1010' , 'B' => '1011' ,
  'C' => '1100' , 'D' => '1101' , 'E' => '1110' , 'F' => '1111' ,
}

error "Requires one argument, found: #{ARGV.length}", 1 unless ARGV.length == 1

error "Invalid hexadecimal number: #{ARGV[0]}", 1 unless ARGV[0] =~ /^[0-9a-f]+$/i

puts ARGV[0].split(//).map { |hex| Bin2Hex[hex.upcase] }.join

